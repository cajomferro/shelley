# A device that controls two traffic lights in a crossroad

device:
  name: CrossroadController
  behavior:
    # operating
    - [operating_entry0_init, operating_priority_prepares]
    - [operating_entry1_init, operating_priority_prepares]
    - [operating_priority_prepares, operating_secondary]
    - [operating_secondary, operating_secondary_prepares]
    - [operating_secondary_prepares, operating_priority]
    - [operating_priority, operating_priority_prepares]
    # interrupted -> operating
    - [blinking, operating_entry1_init]
    - [interrupted, operating_entry1_init]
    # operating -> interrupted
    - [operating_entry0_init, interrupted]
    - [operating_entry1_init, interrupted]
    - [operating_priority_prepares, interrupted]
    - [operating_secondary, interrupted]
    - [operating_secondary_prepares, interrupted]
    - [operating_priority, interrupted]
    - [interrupted, blinking]
    # interrupted
    - [blinking, blinking]
  components:
    # timers to coordinate 2 traffic lights
    SecondaryTimeout2: Timer
    SecondaryPreparesTimeout3: Timer
    PriorityTimeout4: Timer
    InitTimeout5: Timer
    PriorityPreparesTimeout6: Timer
    # 2 traffic lights
    PriorityControl: TrafficLightCtrl # Control
    SecondaryControl: TrafficLightCtrl # Control
  events:
    - operating_entry0_init:
        start: True
        final: True
        micro:
          seq: [PriorityControl.normal_entry0, SecondaryControl.normal_entry0, PriorityControl.normal_green]
    - operating_entry1_init: # coming from interrupted back to operating
        start: False
        final: True
        micro:
          seq: [PriorityControl.normal_entry2, SecondaryControl.normal_entry2, PriorityControl.normal_green]
    - operating_priority_prepares:
        start: False
        final: True
        micro:
          seq:
            - xor:
              - InitTimeout5.timeout
              - PriorityTimeout4.timeout
            - PriorityControl.normal_yellow
    - operating_secondary:
        start: False
        final: True
        micro:
          seq: [PriorityPreparesTimeout6.timeout, SecondaryControl.normal_green, PriorityControl.normal_red]
    - operating_secondary_prepares:
        start: False
        final: True
        micro:
          seq: [SecondaryTimeout2.timeout, SecondaryControl.normal_yellow]
    - operating_priority:
        start: False
        final: True
        micro:
          seq: [SecondaryPreparesTimeout3.timeout, SecondaryControl.normal_red, PriorityControl.normal_green]
    - interrupted:
        start: False
        final: True
        micro:
          seq: [PriorityControl.interrupted_entry1, SecondaryControl.interrupted_entry1]
    - blinking: # in the original example, they ignore this because TrafficLightCtrl and Controller are independent entities
        start: False
        final: True
        micro:
          seq: [PriorityControl.interrupted_black, SecondaryControl.interrupted_black, PriorityControl.interrupted_blinkingyellow, SecondaryControl.interrupted_blinkingyellow]