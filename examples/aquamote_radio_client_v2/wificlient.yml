# https://www.arduino.cc/en/Reference/WiFiClientConnect
# disconnected event might be external (device error) or internal (user called disconnect() function)
name: WiFiClient
start_with: [ssid_joined, ssid_failed]
end_with: [ssid_failed, ssid_left]
operations:
    ssid_joined:
        next: [connected, connection_timeout, ssid_left]
    ssid_failed:
        next: [ssid_failed, ssid_joined]
    ssid_left:
        next: [ssid_joined, ssid_failed]
    print_timeout:
        next: [print_timeout, print_data_ready, disconnected]
    print_data_ready:
        next: [print_timeout, print_data_ready, disconnected]
    connected:
        next: [disconnected, print_timeout, print_data_ready]
    disconnected:
        next: [connected, connection_timeout, ssid_left]
    connection_timeout:
        next: [connected, connection_timeout, ssid_left]

test_system:
  ok:
    receive_ok: [ssid_joined, connected, print_data_ready, disconnected, ssid_left]
  fail:
    invalid1: [ssid_joined, connected, print_data_ready, disconnected, ssid_failed]

# before "print_timeout" or "print_data_ready" or "print_disconnected":
# client.print(String("GET ") + url + " HTTP/1.1\r\n" +
#                 "Host: " + host + "\r\n" +
#                 "Connection: close\r\n\r\n");
#    while (client.available() == 0) {
#        if (millis() - timeout > 5000) {
#            Serial.println(">>> Client Timeout !");
#            client.stop();
#            return;
#        }
#    // Read all the lines of the reply from server and print them to Serial
#    while(client.available()) {
#        String line = client.readStringUntil('\r');
#        Serial.print(line);
#    }

## before "print":
## client.print(String("GET ") + url + " HTTP/1.1\r\n" +
##                 "Host: " + host + "\r\n" +
##                 "Connection: close\r\n\r\n");
#    - [connected, print] # data has been written
#    - [connection_timeout, connected]
## before "print_timeout" or "print_data_ready":
##    while (client.available() == 0) {
##        if (millis() - timeout > 5000) {
##            Serial.println(">>> Client Timeout !");
##            client.stop();
##            return;
##        }
##    // Read all the lines of the reply from server and print them to Serial
##    while(client.available()) {
##        String line = client.readStringUntil('\r');
##        Serial.print(line);
##    }
#    - [print, print_timeout]
#    - [print, print_data_ready]
#    - [print_data_ready, print]
#    - [print_timeout, print]
#    - [print, disconnect]
#    - [print_data_ready, disconnect]
#    - [print_timeout, disconnect]
