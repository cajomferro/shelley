name: DeskLamp
components:
    ledA: Led
    ledB: Led
    t: Timer
operations:
    - level1:
        next: [standby1, level2]
        start: True
        final: False
        micro: [ledA.on, t.start]
    - level2:
        next: [standby2]
        start: False
        final: False
        micro: [t.cancel, ledB.on, t.start]
    - standby1:
        next: [level1]
        start: False
        final: True
        micro: [t.timeout, ledA.off]
    - standby2:
        next: [level1]
        start: False
        final: True
        micro:
          seq:
            - t.timeout
            - xor:
              - [ledB.off, ledA.off]
              - [ledA.off, ledB.off]
              # - [ledA.off, ledB.on] # integration
              # - [ledA.off] # ambiguity

#test_macro:
#  ok:
#    valid1: [level1, standby1]
#    valid2: [level1, level2, standby2]
#    valid3: true
#    valid4: true
#    valid5: true
#  fail:
#    # This is an incomplete trace, and is therefore reject
#    invalid1: [level1, standby1, standby2]
#    invalid2: [standby1, standby2]
#    invalid3: false
#    invalid4: false
#    invalid5: false
#    invalid6: false
#    invalid7: false
#
#test_micro:
#  ok:
#    valid1: [b.press, b.release, ledA.on, t.start, b.press, b.release, t.cancel, ledB.on, t.start, t.timeout, ledB.off, ledA.off]
#    valid3: true
##    valid2:
##      possibly:
##      - b.press
##      - necessarily:
##        - b.release
##        - ledA.on
##        - t.start
##        - true
#  fail:
#    # This is an incomplete trace, and is therefore reject
#    invalid1: [b.press, b.release]
#    invalid2: false