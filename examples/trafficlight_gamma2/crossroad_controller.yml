# A device that controls two traffic lights in a crossroad

name: CrossroadController
start_with: [operating_entry0_init]
end_with: $ANY
components:
  # timers to coordinate 2 traffic lights
  SecondaryTimeout2: Timer
  SecondaryPreparesTimeout3: Timer
  PriorityTimeout4: Timer
  InitTimeout5: Timer
  PriorityPreparesTimeout6: Timer
  # 2 traffic lights
  PriorityControl: TrafficLightCtrl # Control
  SecondaryControl: TrafficLightCtrl # Control
operations:
  operating_entry0_init:
      next: [operating_priority_prepares, interrupted]
      micro:
        seq: [PriorityControl.normal_entry0, SecondaryControl.normal_entry0, PriorityControl.normal_green]
  operating_entry1_init: # coming from interrupted back to operating
      next: [operating_priority_prepares, interrupted]
      micro:
        seq: [PriorityControl.normal_entry2, SecondaryControl.normal_entry2, PriorityControl.normal_green]
  operating_priority_prepares:
      next: [operating_secondary, interrupted]
      micro:
        seq:
          - xor:
            - InitTimeout5.timeout
            - PriorityTimeout4.timeout
          - PriorityControl.normal_yellow
  operating_secondary:
      next: [operating_secondary_prepares, interrupted]
      micro:
        seq: [PriorityPreparesTimeout6.timeout, SecondaryControl.normal_green, PriorityControl.normal_red]
  operating_secondary_prepares:
      next: [operating_priority, interrupted]
      micro:
        seq: [SecondaryTimeout2.timeout, SecondaryControl.normal_yellow]
  operating_priority:
      next: [operating_priority_prepares, interrupted]
      micro:
        seq: [SecondaryPreparesTimeout3.timeout, SecondaryControl.normal_red, PriorityControl.normal_green]
  interrupted:
      next: [operating_entry1_init, blinking]
      micro:
        xor:
          - seq: [PriorityControl.interrupted_entry1, SecondaryControl.interrupted_entry1]
          - seq: [SecondaryControl.interrupted_entry1, PriorityControl.interrupted_entry1]
  blinking: # in the original example, they ignore this because TrafficLightCtrl and Controller are independent entities
      next: [operating_entry1_init, blinking]
      micro:
        seq: [PriorityControl.interrupted_black, SecondaryControl.interrupted_black, PriorityControl.interrupted_blinkingyellow, SecondaryControl.interrupted_blinkingyellow]

#  behavior:
#    # operating
#    - [operating_entry0_init, operating_priority_prepares]
#    - [operating_entry1_init, operating_priority_prepares]
#    - [operating_priority_prepares, operating_secondary]
#    - [operating_secondary, operating_secondary_prepares]
#    - [operating_secondary_prepares, operating_priority]
#    - [operating_priority, operating_priority_prepares]
#    # interrupted -> operating
#    - [blinking, operating_entry1_init]
#    - [interrupted, operating_entry1_init]
#    # operating -> interrupted
#    - [operating_entry0_init, interrupted]
#    - [operating_entry1_init, interrupted]
#    - [operating_priority_prepares, interrupted]
#    - [operating_secondary, interrupted]
#    - [operating_secondary_prepares, interrupted]
#    - [operating_priority, interrupted]
#    - [interrupted, blinking]
#    # interrupted
#    - [blinking, blinking]